# 搭建本地开发环境

本文主要介绍在Linux环境下搭建本地开发环境。

使用Python2.7作为开发环境。

主要分为几步：

1. python开发工具搭建
2. 安装依赖包
3. 其他依赖
4. 运行项目

## Python开发工具搭建

利用python 工具 `virtualenv`和`virtualenvwrapper`来管理python的环境是非常方便的。

### virtualenv和virtualenvwrapper

[`virtualenv`][virtualenv home]是一个隔离python环境的工具。

[`virtualenvwrapper`][virtualenvwrap home]是virtualenv的扩展。
其中扩展包括：

* 创建和删除虚拟化环境;
* 管理开发工作流，使得在多个项目之间不引起冲突且工作更简单;


#### 安装virtualenv
利用`pip`进行安装：

    pip install virtualenv

#### 安装virtualenvwrapper
利用`pip`进行安装：

    pip install virtualenvwrapper

### virtualenv和virtualenvwrapper配置

* 设置virtualenvwrapper，（注意python版本）在`~/.bashrc`文件末尾添加以下命令：

        export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python (默认使用的python版本) #设置python版本和工作目录
        export WORKON_HOME=~/.venvs (工作目录，如果没有默认为~/.virutalenvs)
        source /usr/bin/virtualenvwrapper.sh    # 创建virtualenvwrap的虚拟工作环境
        export PIP_DOWNLOAD_CACHE=$HOME/.pip-downloads  # (可选)创建PIP下载软件包的缓存位置
        

* 为项目web设置虚拟环境

        mkvirtualenv  web
        workon  web

* 若后面要退出虚拟环境，可输入命令：

        deactivate

## 安装依赖包

确保系统的python版本为2.7，若不是，请升级或者安装python2.7。

* 激活前面创建的python虚拟环境`web`

        workon web

    则在终端命令行左边会出现`(web)`，表示已经启用python虚拟环境normandie。

* 需要的Python依赖包在项目的`requirements.txt`文件中有列出，直接利用`pip`安装即可。

        pip install -r requirements.txt


## 其他依赖

TODO

## 运行项目

在本地开发环境运行项目：

    python runserver.py


## 可能会出现的问题

TODO


[virtualenv home]: http://www.virtualenv.org
[virtualenvwrap home]: http://virtualenvwrapper.readthedocs.org/en/latest/
[virtualenvwrap command]:  http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html 